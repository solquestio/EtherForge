'use client';

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface Market {
  id: string;
  title: string;
  category: string;
  description: string;
  volume: string;
  endDate: string;
  yesPrice: number;
  noPrice: number;
  participants: number;
  myPosition?: { side: 'yes' | 'no'; amount: string };
}

interface PredictionStats {
  totalVolume: string;
  activeMarkets: number;
  resolvedMarkets: number;
  userEarnings: string;
}

export default function PredictionMarketUI() {
  const [activeTab, setActiveTab] = useState('markets');
  const [loading, setLoading] = useState(true);
  const [selectedCategory, setSelectedCategory] = useState('all');

  const stats: PredictionStats = {
    totalVolume: '$12.5M',
    activeMarkets: 156,
    resolvedMarkets: 847,
    userEarnings: '12.8 ETH'
  };

  const markets: Market[] = [
    {
      id: '1',
      title: 'Will ETH reach $5,000 by end of 2024?',
      category: 'Crypto',
      description: 'Ethereum (ETH) will trade at $5,000 or higher on any major exchange before December 31, 2024',
      volume: '$245K',
      endDate: '2024-12-31',
      yesPrice: 0.72,
      noPrice: 0.28,
      participants: 1247,
      myPosition: { side: 'yes', amount: '2.5 ETH' }
    },
    {
      id: '2',
      title: 'Bitcoin ETF approval by Q2 2024',
      category: 'Crypto',
      description: 'Will the SEC approve a spot Bitcoin ETF by the end of Q2 2024?',
      volume: '$180K',
      endDate: '2024-06-30',
      yesPrice: 0.85,
      noPrice: 0.15,
      participants: 892
    },
    {
      id: '3',
      title: 'Champions League Winner 2024',
      category: 'Sports',
      description: 'Will Manchester City win the UEFA Champions League 2024?',
      volume: '$320K',
      endDate: '2024-06-01',
      yesPrice: 0.35,
      noPrice: 0.65,
      participants: 2156
    },
    {
      id: '4',
      title: 'US Presidential Election 2024',
      category: 'Politics',
      description: 'Will the Democratic Party win the 2024 US Presidential Election?',
      volume: '$890K',
      endDate: '2024-11-05',
      yesPrice: 0.48,
      noPrice: 0.52,
      participants: 4589
    }
  ];

  const categories = ['all', 'crypto', 'sports', 'politics', 'tech', 'entertainment'];

  useEffect(() => {
    setTimeout(() => setLoading(false), 1500);
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-amber-500 mx-auto mb-4"></div>
          <p className="text-white text-lg">Loading prediction markets...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-amber-950 to-slate-950">
      {/* Header */}
      <header className="border-b border-slate-700 bg-slate-900/50 backdrop-blur-sm">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <h1 className="text-2xl font-bold text-white">üîÆ Prediction Market</h1>
              <span className="text-sm text-slate-400">Generated by VibeForge</span>
            </div>
            <div className="flex items-center space-x-4">
              <a href="/" className="text-slate-400 hover:text-white transition-colors text-sm">
                ‚Üê Back to Generator
              </a>
              <button className="bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-white px-6 py-2 rounded-lg font-medium transition-all transform hover:scale-105">
                Connect Wallet
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Stats Overview */}
      <div className="bg-slate-800/30 border-b border-slate-700">
        <div className="container mx-auto px-6 py-6">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Total Volume</h3>
                <div className="text-3xl font-bold text-amber-400">{stats.totalVolume}</div>
                <div className="text-xs text-slate-400 mt-1">All markets</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.1 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Active Markets</h3>
                <div className="text-3xl font-bold text-green-400">{stats.activeMarkets}</div>
                <div className="text-xs text-slate-400 mt-1">Open for trading</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.2 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Resolved Markets</h3>
                <div className="text-3xl font-bold text-blue-400">{stats.resolvedMarkets}</div>
                <div className="text-xs text-slate-400 mt-1">Completed</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.3 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Your Earnings</h3>
                <div className="text-3xl font-bold text-purple-400">{stats.userEarnings}</div>
                <div className="text-xs text-slate-400 mt-1">Total profits</div>
              </div>
            </motion.div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-6 py-8">
        {/* Tabs */}
        <div className="flex space-x-1 bg-slate-800/50 rounded-xl p-1 mb-8 max-w-lg mx-auto">
          {['markets', 'portfolio', 'create'].map((tab) => (
            <button
              key={tab}
              onClick={() => setActiveTab(tab)}
              className={`flex-1 py-3 px-4 rounded-lg text-sm font-medium transition-all capitalize ${
                activeTab === tab
                  ? 'bg-amber-600 text-white'
                  : 'text-slate-400 hover:text-white'
              }`}
            >
              {tab}
            </button>
          ))}
        </div>

        {/* Content */}
        <AnimatePresence mode="wait">
          {activeTab === 'markets' && (
            <motion.div
              key="markets"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
            >
              {/* Category Filter */}
              <div className="flex flex-wrap gap-3 mb-8 justify-center">
                {categories.map((category) => (
                  <button
                    key={category}
                    onClick={() => setSelectedCategory(category)}
                    className={`px-4 py-2 rounded-lg text-sm font-medium transition-all capitalize ${
                      selectedCategory === category
                        ? 'bg-amber-600 text-white'
                        : 'bg-slate-700 text-slate-300 hover:bg-slate-600'
                    }`}
                  >
                    {category}
                  </button>
                ))}
              </div>

              {/* Markets Grid */}
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {markets
                  .filter(market => selectedCategory === 'all' || market.category.toLowerCase() === selectedCategory)
                  .map((market, index) => (
                    <motion.div
                      key={market.id}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                      className="bg-slate-800/50 border border-slate-700 rounded-xl p-6 hover:border-amber-500/30 transition-all duration-300"
                    >
                      <div className="mb-4">
                        <div className="flex items-center justify-between mb-2">
                          <span className={`px-2 py-1 rounded text-xs font-medium ${
                            market.category === 'Crypto' ? 'bg-orange-600 text-white' :
                            market.category === 'Sports' ? 'bg-green-600 text-white' :
                            market.category === 'Politics' ? 'bg-blue-600 text-white' :
                            'bg-purple-600 text-white'
                          }`}>
                            {market.category}
                          </span>
                          {market.myPosition && (
                            <span className="px-2 py-1 bg-amber-600 text-white rounded text-xs font-medium">
                              Your Position
                            </span>
                          )}
                        </div>
                        <h3 className="text-xl font-bold text-white mb-2">{market.title}</h3>
                        <p className="text-slate-300 text-sm leading-relaxed">{market.description}</p>
                      </div>

                      <div className="grid grid-cols-3 gap-4 mb-4 text-sm">
                        <div>
                          <span className="text-slate-400">Volume</span>
                          <div className="text-white font-medium">{market.volume}</div>
                        </div>
                        <div>
                          <span className="text-slate-400">Participants</span>
                          <div className="text-white font-medium">{market.participants.toLocaleString()}</div>
                        </div>
                        <div>
                          <span className="text-slate-400">Ends</span>
                          <div className="text-white font-medium">{new Date(market.endDate).toLocaleDateString()}</div>
                        </div>
                      </div>

                      {market.myPosition && (
                        <div className="mb-4 p-3 bg-amber-900/30 border border-amber-600/30 rounded-lg">
                          <div className="flex justify-between items-center">
                            <span className="text-amber-300 font-medium">Your Position: {market.myPosition.side.toUpperCase()}</span>
                            <span className="text-amber-400 font-bold">{market.myPosition.amount}</span>
                          </div>
                        </div>
                      )}

                      {/* Price Display */}
                      <div className="grid grid-cols-2 gap-3 mb-4">
                        <div className="bg-green-900/30 border border-green-600/30 rounded-lg p-3 text-center">
                          <div className="text-green-400 font-bold text-lg">{(market.yesPrice * 100).toFixed(0)}¬¢</div>
                          <div className="text-green-300 text-sm">YES</div>
                        </div>
                        <div className="bg-red-900/30 border border-red-600/30 rounded-lg p-3 text-center">
                          <div className="text-red-400 font-bold text-lg">{(market.noPrice * 100).toFixed(0)}¬¢</div>
                          <div className="text-red-300 text-sm">NO</div>
                        </div>
                      </div>

                      {/* Action Buttons */}
                      <div className="grid grid-cols-2 gap-3">
                        <button className="bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white py-2 px-4 rounded-lg font-medium transition-all">
                          Buy YES
                        </button>
                        <button className="bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 text-white py-2 px-4 rounded-lg font-medium transition-all">
                          Buy NO
                        </button>
                      </div>
                    </motion.div>
                  ))}
              </div>
            </motion.div>
          )}

          {activeTab === 'portfolio' && (
            <motion.div
              key="portfolio"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
              className="max-w-4xl mx-auto"
            >
              <h2 className="text-2xl font-bold text-white mb-8 text-center">üìä Your Portfolio</h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
                {/* Portfolio Stats */}
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                  <h3 className="text-xl font-bold text-white mb-4">Portfolio Overview</h3>
                  <div className="space-y-4">
                    <div className="flex justify-between">
                      <span className="text-slate-400">Total Invested</span>
                      <span className="text-white font-medium">18.5 ETH</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-400">Current Value</span>
                      <span className="text-green-400 font-medium">22.3 ETH</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-400">Total Profit</span>
                      <span className="text-green-400 font-bold">+3.8 ETH (+20.5%)</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-400">Active Positions</span>
                      <span className="text-white font-medium">7</span>
                    </div>
                  </div>
                </div>

                {/* Recent Activity */}
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                  <h3 className="text-xl font-bold text-white mb-4">Recent Activity</h3>
                  <div className="space-y-3">
                    {[
                      { action: 'Bought YES', market: 'ETH $5K by 2024', amount: '+2.5 ETH', time: '2h ago' },
                      { action: 'Sold NO', market: 'Bitcoin ETF Q2', amount: '+1.2 ETH', time: '1d ago' },
                      { action: 'Bought YES', market: 'Champions League', amount: '+0.8 ETH', time: '3d ago' }
                    ].map((activity, index) => (
                      <motion.div
                        key={index}
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: index * 0.1 }}
                        className="flex items-center justify-between p-3 bg-slate-700/30 rounded-lg"
                      >
                        <div>
                          <div className="text-white font-medium text-sm">{activity.action}</div>
                          <div className="text-slate-400 text-xs">{activity.market}</div>
                        </div>
                        <div className="text-right">
                          <div className="text-green-400 font-medium text-sm">{activity.amount}</div>
                          <div className="text-slate-400 text-xs">{activity.time}</div>
                        </div>
                      </motion.div>
                    ))}
                  </div>
                </div>
              </div>

              {/* Active Positions */}
              <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                <h3 className="text-xl font-bold text-white mb-4">Active Positions</h3>
                <div className="space-y-4">
                  {[
                    { market: 'ETH reaches $5,000 by end of 2024', position: 'YES', amount: '2.5 ETH', currentValue: '3.1 ETH', profit: '+0.6 ETH', status: 'winning' },
                    { market: 'Bitcoin ETF approval by Q2 2024', position: 'YES', amount: '1.8 ETH', currentValue: '2.2 ETH', profit: '+0.4 ETH', status: 'winning' },
                    { market: 'Champions League Winner 2024', position: 'NO', amount: '1.2 ETH', currentValue: '0.9 ETH', profit: '-0.3 ETH', status: 'losing' }
                  ].map((position, index) => (
                    <motion.div
                      key={index}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                      className="flex items-center justify-between p-4 bg-slate-700/30 rounded-lg"
                    >
                      <div className="flex-1">
                        <h4 className="text-white font-medium mb-1">{position.market}</h4>
                        <div className="flex items-center space-x-4 text-sm">
                          <span className={`px-2 py-1 rounded ${
                            position.position === 'YES' ? 'bg-green-600 text-white' : 'bg-red-600 text-white'
                          }`}>
                            {position.position}
                          </span>
                          <span className="text-slate-400">Invested: {position.amount}</span>
                          <span className="text-slate-400">Current: {position.currentValue}</span>
                        </div>
                      </div>
                      <div className="text-right">
                        <div className={`font-bold ${position.status === 'winning' ? 'text-green-400' : 'text-red-400'}`}>
                          {position.profit}
                        </div>
                        <button className="text-amber-400 hover:text-amber-300 text-sm">Sell</button>
                      </div>
                    </motion.div>
                  ))}
                </div>
              </div>
            </motion.div>
          )}

          {activeTab === 'create' && (
            <motion.div
              key="create"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
              className="max-w-2xl mx-auto"
            >
              <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-8">
                <h2 className="text-2xl font-bold text-white mb-8 text-center">üîÆ Create New Market</h2>
                
                <div className="space-y-6">
                  <div>
                    <label className="block text-sm text-slate-400 mb-2">Market Question</label>
                    <input
                      type="text"
                      placeholder="Will [event] happen by [date]?"
                      className="w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-amber-500"
                    />
                  </div>

                  <div>
                    <label className="block text-sm text-slate-400 mb-2">Description</label>
                    <textarea
                      placeholder="Detailed description of the market conditions and resolution criteria..."
                      rows={4}
                      className="w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:ring-2 focus:ring-amber-500"
                    />
                  </div>

                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <label className="block text-sm text-slate-400 mb-2">Category</label>
                      <select className="w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white focus:ring-2 focus:ring-amber-500">
                        <option>Crypto</option>
                        <option>Sports</option>
                        <option>Politics</option>
                        <option>Tech</option>
                        <option>Entertainment</option>
                      </select>
                    </div>
                    <div>
                      <label className="block text-sm text-slate-400 mb-2">End Date</label>
                      <input
                        type="date"
                        className="w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white focus:ring-2 focus:ring-amber-500"
                      />
                    </div>
                  </div>

                  <div>
                    <label className="block text-sm text-slate-400 mb-2">Initial Liquidity</label>
                    <div className="relative">
                      <input
                        type="text"
                        placeholder="0.0"
                        className="w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white focus:ring-2 focus:ring-amber-500"
                      />
                      <span className="absolute right-4 top-1/2 transform -translate-y-1/2 text-slate-400">ETH</span>
                    </div>
                  </div>

                  <div className="bg-slate-700/30 rounded-lg p-4 space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-slate-400">Market Creation Fee</span>
                      <span className="text-white">0.01 ETH</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-400">Oracle Fee</span>
                      <span className="text-white">0.005 ETH</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-400">Your Share</span>
                      <span className="text-white">1% of trading volume</span>
                    </div>
                  </div>

                  <button className="w-full bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-white py-4 rounded-lg font-medium transition-all transform hover:scale-105 text-lg">
                    üîÆ Create Market
                  </button>
                </div>
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </div>

      {/* Footer */}
      <footer className="border-t border-slate-800 bg-slate-900/30 backdrop-blur-xl mt-12">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between text-sm text-slate-400">
            <div>Built for ETH Dublin 2025 üáÆüá™</div>
            <div className="flex items-center space-x-4">
              <span>Prediction Market</span>
              <span className="text-amber-400">‚óè</span>
              <span>Powered by VibeForge</span>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
} 
