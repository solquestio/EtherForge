'use client';

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface NFT {
  itemId: string;
  name: string;
  description: string;
  image: string;
  price: string;
  seller: string;
  isAuction: boolean;
  auctionEndTime?: number;
  highestBid?: string;
}

export default function MarketplaceUI() {
  const [nfts, setNfts] = useState<NFT[]>([]);
  const [loading, setLoading] = useState(true);
  const [filter, setFilter] = useState('all');
  const [sortBy, setSortBy] = useState('newest');

  const mockNFTs: NFT[] = [
    {
      itemId: '1',
      name: 'Cosmic Wanderer #1234',
      description: 'A unique digital artwork exploring the vastness of space',
      image: 'https://images.unsplash.com/photo-1446776877081-d282a0f896e2?w=400',
      price: '2.5',
      seller: '0x1234...5678',
      isAuction: false
    },
    {
      itemId: '2', 
      name: 'Digital Dreams #567',
      description: 'Surreal digital art that blends reality with imagination',
      image: 'https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400',
      price: '1.8',
      seller: '0x9876...4321',
      isAuction: true,
      auctionEndTime: Date.now() + 86400000,
      highestBid: '1.2'
    },
    {
      itemId: '3',
      name: 'Neon Genesis #890',
      description: 'Cyberpunk-inspired digital masterpiece with glowing effects',
      image: 'https://images.unsplash.com/photo-1614853316476-de00d14cb1fc?w=400',
      price: '3.2',
      seller: '0xabcd...efgh',
      isAuction: false
    },
    {
      itemId: '4',
      name: 'Abstract Emotions #456',
      description: 'A colorful representation of human emotions in digital form',
      image: 'https://images.unsplash.com/photo-1541961017774-22349e4a1262?w=400',
      price: '1.5',
      seller: '0x5678...90ab',
      isAuction: true,
      auctionEndTime: Date.now() + 172800000,
      highestBid: '0.8'
    }
  ];

  useEffect(() => {
    // Simulate loading
    setTimeout(() => {
      setNfts(mockNFTs);
      setLoading(false);
    }, 1500);
  }, []);

  const formatTimeLeft = (endTime: number) => {
    const now = Date.now();
    const timeLeft = endTime - now;
    
    if (timeLeft <= 0) return 'Auction ended';
    
    const hours = Math.floor(timeLeft / (1000 * 60 * 60));
    const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
    
    return `${hours}h ${minutes}m left`;
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-white text-lg">Loading amazing NFTs...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900">
      {/* Header */}
      <header className="border-b border-slate-700 bg-slate-900/50 backdrop-blur-sm">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <h1 className="text-2xl font-bold text-white">üé® NFT Marketplace</h1>
              <span className="text-sm text-slate-400">Generated by VibeCode AI</span>
            </div>
            <div className="flex items-center space-x-4">
              <a 
                href="/" 
                className="text-slate-400 hover:text-white transition-colors text-sm"
              >
                ‚Üê Back to Generator
              </a>
              <button className="bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600 text-white px-6 py-2 rounded-lg font-medium transition-all transform hover:scale-105">
                Connect Wallet
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Stats Banner */}
      <div className="bg-slate-800/30 border-b border-slate-700">
        <div className="container mx-auto px-6 py-4">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
            <div>
              <div className="text-2xl font-bold text-blue-400">10,000</div>
              <div className="text-xs text-slate-400">Total Items</div>
            </div>
            <div>
              <div className="text-2xl font-bold text-green-400">2,456</div>
              <div className="text-xs text-slate-400">Owners</div>
            </div>
            <div>
              <div className="text-2xl font-bold text-purple-400">0.05</div>
              <div className="text-xs text-slate-400">Floor Price (ETH)</div>
            </div>
            <div>
              <div className="text-2xl font-bold text-orange-400">156.7</div>
              <div className="text-xs text-slate-400">Total Volume (ETH)</div>
            </div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-6 py-8">
        {/* Filters */}
        <div className="flex flex-wrap gap-4 mb-8">
          <select 
            value={filter} 
            onChange={(e) => setFilter(e.target.value)}
            className="bg-slate-800 text-white border border-slate-600 rounded-lg px-4 py-2 focus:ring-2 focus:ring-purple-500"
          >
            <option value="all">All Items</option>
            <option value="auction">Auctions</option>
            <option value="fixed">Fixed Price</option>
          </select>
          
          <select 
            value={sortBy} 
            onChange={(e) => setSortBy(e.target.value)}
            className="bg-slate-800 text-white border border-slate-600 rounded-lg px-4 py-2 focus:ring-2 focus:ring-purple-500"
          >
            <option value="newest">Newest First</option>
            <option value="price-low">Price: Low to High</option>
            <option value="price-high">Price: High to Low</option>
            <option value="ending">Ending Soon</option>
          </select>

          <div className="flex-1"></div>
          
          <div className="flex items-center space-x-2 bg-slate-800 rounded-lg px-4 py-2">
            <span className="text-slate-400 text-sm">üîç</span>
            <input
              type="text"
              placeholder="Search NFTs..."
              className="bg-transparent text-white placeholder-slate-400 outline-none text-sm"
            />
          </div>
        </div>

        {/* NFT Grid */}
        <motion.div 
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.6 }}
        >
          <AnimatePresence>
            {nfts.map((nft) => (
              <motion.div
                key={nft.itemId}
                layout
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                exit={{ opacity: 0, scale: 0.9 }}
                className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl overflow-hidden hover:border-purple-500 transition-all duration-300 group cursor-pointer"
              >
                {/* Image */}
                <div className="relative overflow-hidden">
                  <img 
                    src={nft.image} 
                    alt={nft.name}
                    className="w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                  {nft.isAuction && (
                    <div className="absolute top-3 right-3 bg-red-500 text-white text-xs px-2 py-1 rounded-full">
                      üî• Auction
                    </div>
                  )}
                  <div className="absolute top-3 left-3 bg-slate-900/80 text-white text-xs px-2 py-1 rounded-full">
                    #{nft.itemId}
                  </div>
                </div>

                {/* Content */}
                <div className="p-4">
                  <h3 className="text-white font-semibold text-lg mb-2 truncate">{nft.name}</h3>
                  <p className="text-slate-400 text-sm mb-4 line-clamp-2">{nft.description}</p>
                  
                  {/* Price Info */}
                  <div className="flex items-center justify-between mb-4">
                    <div>
                      <p className="text-slate-400 text-xs">
                        {nft.isAuction ? 'Current Bid' : 'Price'}
                      </p>
                      <p className="text-white font-bold text-lg">
                        {nft.isAuction ? nft.highestBid : nft.price} ETH
                      </p>
                    </div>
                    {nft.isAuction && nft.auctionEndTime && (
                      <div className="text-right">
                        <p className="text-slate-400 text-xs">Time Left</p>
                        <p className="text-orange-400 text-sm font-medium">
                          {formatTimeLeft(nft.auctionEndTime)}
                        </p>
                      </div>
                    )}
                  </div>

                  {/* Action Button */}
                  <button className="w-full bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600 text-white py-3 rounded-lg font-medium transition-all transform hover:scale-105 active:scale-95">
                    {nft.isAuction ? 'Place Bid' : 'Buy Now'}
                  </button>

                  {/* Seller Info */}
                  <div className="flex items-center justify-between mt-3 pt-3 border-t border-slate-700">
                    <span className="text-slate-400 text-xs">Seller</span>
                    <span className="text-slate-300 text-xs font-mono">{nft.seller}</span>
                  </div>
                </div>
              </motion.div>
            ))}
          </AnimatePresence>
        </motion.div>

        {nfts.length === 0 && (
          <div className="text-center py-16">
            <div className="text-6xl mb-4">üé®</div>
            <h3 className="text-white text-xl font-semibold mb-2">No NFTs found</h3>
            <p className="text-slate-400">Try adjusting your filters or check back later</p>
          </div>
        )}
      </div>

      {/* Footer */}
      <footer className="border-t border-slate-700 bg-slate-900/50 mt-16">
        <div className="container mx-auto px-6 py-8">
          <div className="text-center text-slate-400">
            <p className="mb-2">üöÄ Generated by VibeCode AI for ETH Dublin 2025</p>
            <p className="text-sm">Complete NFT marketplace with smart contracts, auctions, and royalties</p>
          </div>
        </div>
      </footer>
    </div>
  );
} 