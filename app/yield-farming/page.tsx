'use client';

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface Farm {
  id: string;
  name: string;
  pair: string;
  apy: string;
  tvl: string;
  earned: string;
  staked: string;
  multiplier: string;
  icon1: string;
  icon2: string;
}

export default function YieldFarmingUI() {
  const [farms, setFarms] = useState<Farm[]>([]);
  const [loading, setLoading] = useState(true);
  const [totalStaked, setTotalStaked] = useState('8,450.32');
  const [pendingRewards, setPendingRewards] = useState('156.7');
  const [filter, setFilter] = useState('all');

  const mockFarms: Farm[] = [
    {
      id: '1',
      name: 'ETH-USDC',
      pair: 'ETH-USDC',
      apy: '145.2%',
      tvl: '$2.1M',
      earned: '45.2 FARM',
      staked: '2,450.32',
      multiplier: '2x',
      icon1: '‚ü†',
      icon2: 'üí∞'
    },
    {
      id: '2',
      name: 'WBTC-ETH',
      pair: 'WBTC-ETH',
      apy: '89.7%',
      tvl: '$850K',
      earned: '23.1 FARM',
      staked: '1,250.80',
      multiplier: '1.5x',
      icon1: '‚Çø',
      icon2: '‚ü†'
    },
    {
      id: '3',
      name: 'DAI-USDT',
      pair: 'DAI-USDT',
      apy: '67.3%',
      tvl: '$1.6M',
      earned: '12.8 FARM',
      staked: '890.45',
      multiplier: '1x',
      icon1: 'üü°',
      icon2: 'üü¢'
    }
  ];

  useEffect(() => {
    // Simulate loading
    setTimeout(() => {
      setFarms(mockFarms);
      setLoading(false);
    }, 1500);
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-green-500 mx-auto mb-4"></div>
          <p className="text-white text-lg">Loading farming pools...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-purple-950 to-slate-950">
      {/* Header */}
      <header className="border-b border-slate-700 bg-slate-900/50 backdrop-blur-sm">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <h1 className="text-2xl font-bold text-white">üåæ Yield Farming</h1>
              <span className="text-sm text-slate-400">Generated by VibeCode AI</span>
            </div>
            <div className="flex items-center space-x-4">
              <a 
                href="/" 
                className="text-slate-400 hover:text-white transition-colors text-sm"
              >
                ‚Üê Back to Generator
              </a>
              <button className="bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 text-white px-6 py-2 rounded-lg font-medium transition-all transform hover:scale-105">
                Connect Wallet
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Portfolio Overview */}
      <div className="bg-slate-800/30 border-b border-slate-700">
        <div className="container mx-auto px-6 py-6">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <motion.div 
              className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.1 }}
            >
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Farm Portfolio</h3>
                <div className="text-xs text-slate-400 mb-2">Total Value Locked</div>
                <div className="text-3xl font-bold text-green-400">${totalStaked}</div>
                <div className="mt-4">
                  <button className="w-full bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
                    üí∞ Harvest All
                  </button>
                </div>
              </div>
            </motion.div>

            <motion.div 
              className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.2 }}
            >
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Pending Rewards</h3>
                <div className="text-xs text-slate-400 mb-2">FARM Tokens</div>
                <div className="text-3xl font-bold text-yellow-400">{pendingRewards}</div>
                <div className="text-xs text-slate-400 mt-1">‚âà $2,840.32</div>
              </div>
            </motion.div>

            <motion.div 
              className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.3 }}
            >
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Active Farms</h3>
                <div className="text-xs text-slate-400 mb-2">Pools Staking</div>
                <div className="text-3xl font-bold text-blue-400">{farms.length}</div>
                <div className="text-xs text-slate-400 mt-1">Across 3 chains</div>
              </div>
            </motion.div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-6 py-8">
        {/* Filters */}
        <div className="flex flex-wrap gap-4 mb-8">
          <select 
            value={filter} 
            onChange={(e) => setFilter(e.target.value)}
            className="bg-slate-800 text-white border border-slate-600 rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-500"
          >
            <option value="all">All Farms</option>
            <option value="active">Active</option>
            <option value="high-apy">High APY</option>
            <option value="stable">Stablecoin Pairs</option>
          </select>
          
          <select className="bg-slate-800 text-white border border-slate-600 rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-500">
            <option value="apy">Sort by APY</option>
            <option value="tvl">Sort by TVL</option>
            <option value="earned">Sort by Earned</option>
          </select>

          <div className="flex-1"></div>
          
          <div className="flex items-center space-x-2 bg-slate-800 rounded-lg px-4 py-2">
            <span className="text-slate-400 text-sm">üîç</span>
            <input
              type="text"
              placeholder="Search farms..."
              className="bg-transparent text-white placeholder-slate-400 outline-none text-sm"
            />
          </div>
        </div>

        {/* Farms Grid */}
        <motion.div 
          className="space-y-4"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.6 }}
        >
          <AnimatePresence>
            {farms.map((farm, index) => (
              <motion.div
                key={farm.id}
                layout
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -20 }}
                transition={{ delay: index * 0.1 }}
                className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6 hover:border-green-500 transition-all duration-300 group"
              >
                <div className="grid grid-cols-1 lg:grid-cols-6 gap-4 items-center">
                  {/* Farm Info */}
                  <div className="lg:col-span-2">
                    <div className="flex items-center space-x-3">
                      <div className="flex items-center space-x-1">
                        <span className="text-2xl">{farm.icon1}</span>
                        <span className="text-2xl">{farm.icon2}</span>
                      </div>
                      <div>
                        <h3 className="text-lg font-semibold text-white">{farm.name}</h3>
                        <div className="flex items-center space-x-2">
                          <span className="text-xs text-slate-400">Multiplier:</span>
                          <span className="text-xs bg-green-600 text-white px-2 py-1 rounded">{farm.multiplier}</span>
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* APY */}
                  <div className="text-center">
                    <div className="text-xs text-slate-400 mb-1">APY</div>
                    <div className="text-xl font-bold text-green-400">{farm.apy}</div>
                  </div>

                  {/* TVL */}
                  <div className="text-center">
                    <div className="text-xs text-slate-400 mb-1">TVL</div>
                    <div className="text-lg font-semibold text-white">{farm.tvl}</div>
                  </div>

                  {/* Earned */}
                  <div className="text-center">
                    <div className="text-xs text-slate-400 mb-1">Earned</div>
                    <div className="text-lg font-semibold text-yellow-400">{farm.earned}</div>
                    <div className="text-xs text-slate-400">‚âà ${parseFloat(farm.earned) * 18.5}</div>
                  </div>

                  {/* Actions */}
                  <div className="flex flex-col space-y-2">
                    <button className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors flex items-center justify-center space-x-1">
                      <span>üåæ</span>
                      <span>Stake</span>
                    </button>
                    <button className="bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors flex items-center justify-center space-x-1">
                      <span>üí∞</span>
                      <span>Harvest</span>
                    </button>
                  </div>
                </div>

                {/* Expanded Details */}
                <div className="mt-4 pt-4 border-t border-slate-700">
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
                    <div>
                      <span className="text-slate-400">Your Stake:</span>
                      <div className="text-white font-medium">{farm.staked} LP</div>
                    </div>
                    <div>
                      <span className="text-slate-400">Pool Weight:</span>
                      <div className="text-white font-medium">15.2%</div>
                    </div>
                    <div>
                      <span className="text-slate-400">Daily Rewards:</span>
                      <div className="text-white font-medium">2.4 FARM</div>
                    </div>
                    <div>
                      <span className="text-slate-400">Lock Period:</span>
                      <div className="text-white font-medium">No Lock</div>
                    </div>
                  </div>
                </div>
              </motion.div>
            ))}
          </AnimatePresence>
        </motion.div>

        {/* Stats Footer */}
        <motion.div 
          className="mt-12 grid grid-cols-2 md:grid-cols-4 gap-6"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.5 }}
        >
          <div className="bg-slate-800/30 rounded-xl p-4 text-center border border-slate-700">
            <div className="text-2xl font-bold text-blue-400">11</div>
            <div className="text-xs text-slate-400">Templates Ready</div>
          </div>
          <div className="bg-slate-800/30 rounded-xl p-4 text-center border border-slate-700">
            <div className="text-2xl font-bold text-green-400">{'< 5min'}</div>
            <div className="text-xs text-slate-400">Deploy Time</div>
          </div>
          <div className="bg-slate-800/30 rounded-xl p-4 text-center border border-slate-700">
            <div className="text-2xl font-bold text-purple-400">98.7%</div>
            <div className="text-xs text-slate-400">Uptime</div>
          </div>
          <div className="bg-slate-800/30 rounded-xl p-4 text-center border border-slate-700">
            <div className="text-2xl font-bold text-orange-400">$2.4M</div>
            <div className="text-xs text-slate-400">Total TVL</div>
          </div>
        </motion.div>
      </div>

      {/* Footer */}
      <footer className="border-t border-slate-800 bg-slate-900/30 backdrop-blur-xl mt-12">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between text-sm text-slate-400">
            <div>Built for ETH Dublin 2025 üáÆüá™</div>
            <div className="flex items-center space-x-4">
              <span>Yield Farming Protocol</span>
              <span className="text-green-400">‚óè</span>
              <span>Powered by VibeCode AI</span>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
} 