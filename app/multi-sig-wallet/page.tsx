'use client';

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface Transaction {
  id: string;
  to: string;
  amount: string;
  token: string;
  description: string;
  status: 'pending' | 'approved' | 'executed' | 'rejected';
  confirmations: number;
  required: number;
  initiatedBy: string;
  timestamp: string;
  approvers: string[];
}

interface Signer {
  address: string;
  name: string;
  avatar: string;
  status: 'active' | 'inactive';
  lastSeen: string;
}

interface WalletStats {
  totalBalance: string;
  pendingTxs: number;
  signers: number;
  threshold: number;
}

export default function MultiSigWalletUI() {
  const [activeTab, setActiveTab] = useState('dashboard');
  const [loading, setLoading] = useState(true);

  const stats: WalletStats = {
    totalBalance: '$485K',
    pendingTxs: 3,
    signers: 5,
    threshold: 3
  };

  const signers: Signer[] = [
    { address: '0x1234...5678', name: 'Alice (CEO)', avatar: 'üë©‚Äçüíº', status: 'active', lastSeen: '2 min ago' },
    { address: '0x2345...6789', name: 'Bob (CTO)', avatar: 'üë®‚Äçüíª', status: 'active', lastSeen: '5 min ago' },
    { address: '0x3456...7890', name: 'Charlie (CFO)', avatar: 'üë®‚Äçüíº', status: 'active', lastSeen: '1 hour ago' },
    { address: '0x4567...8901', name: 'Diana (COO)', avatar: 'üë©‚Äçüíª', status: 'active', lastSeen: '3 hours ago' },
    { address: '0x5678...9012', name: 'Eve (Legal)', avatar: '‚öñÔ∏è', status: 'inactive', lastSeen: '1 day ago' }
  ];

  const transactions: Transaction[] = [
    {
      id: '1',
      to: '0xABCD...1234',
      amount: '50,000',
      token: 'USDC',
      description: 'Q4 Marketing Budget',
      status: 'pending',
      confirmations: 2,
      required: 3,
      initiatedBy: 'Alice (CEO)',
      timestamp: '2 hours ago',
      approvers: ['Alice', 'Bob']
    },
    {
      id: '2',
      to: '0xEFGH...5678',
      amount: '25',
      token: 'ETH',
      description: 'Development Team Bonus',
      status: 'pending',
      confirmations: 1,
      required: 3,
      initiatedBy: 'Bob (CTO)',
      timestamp: '4 hours ago',
      approvers: ['Bob']
    },
    {
      id: '3',
      to: '0xIJKL...9012',
      amount: '15,000',
      token: 'USDC',
      description: 'Legal Services Payment',
      status: 'approved',
      confirmations: 3,
      required: 3,
      initiatedBy: 'Eve (Legal)',
      timestamp: '1 day ago',
      approvers: ['Alice', 'Charlie', 'Diana']
    }
  ];

  useEffect(() => {
    setTimeout(() => setLoading(false), 1500);
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-teal-500 mx-auto mb-4"></div>
          <p className="text-white text-lg">Loading multi-sig wallet...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-teal-950 to-slate-950">
      {/* Header */}
      <header className="border-b border-slate-700 bg-slate-900/50 backdrop-blur-sm">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <h1 className="text-2xl font-bold text-white">üîê Multi-Sig Wallet</h1>
              <span className="text-sm text-slate-400">Generated by VibeForge</span>
            </div>
            <div className="flex items-center space-x-4">
              <a href="/" className="text-slate-400 hover:text-white transition-colors text-sm">
                ‚Üê Back to Generator
              </a>
              <button className="bg-gradient-to-r from-teal-500 to-cyan-500 hover:from-teal-600 hover:to-cyan-600 text-white px-6 py-2 rounded-lg font-medium transition-all transform hover:scale-105">
                Connect Wallet
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Wallet Overview */}
      <div className="bg-slate-800/30 border-b border-slate-700">
        <div className="container mx-auto px-6 py-6">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Total Balance</h3>
                <div className="text-3xl font-bold text-teal-400">{stats.totalBalance}</div>
                <div className="text-xs text-slate-400 mt-1">All assets</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.1 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Pending Transactions</h3>
                <div className="text-3xl font-bold text-yellow-400">{stats.pendingTxs}</div>
                <div className="text-xs text-slate-400 mt-1">Awaiting approval</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.2 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Active Signers</h3>
                <div className="text-3xl font-bold text-green-400">{stats.signers}</div>
                <div className="text-xs text-slate-400 mt-1">Team members</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.3 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Threshold</h3>
                <div className="text-3xl font-bold text-purple-400">{stats.threshold}/{stats.signers}</div>
                <div className="text-xs text-slate-400 mt-1">Required signatures</div>
              </div>
            </motion.div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-6 py-8">
        {/* Tabs */}
        <div className="flex space-x-1 bg-slate-800/50 rounded-xl p-1 mb-8 max-w-2xl mx-auto">
          {['dashboard', 'transactions', 'settings', 'security'].map((tab) => (
            <button
              key={tab}
              onClick={() => setActiveTab(tab)}
              className={`flex-1 py-3 px-4 rounded-lg text-sm font-medium transition-all capitalize ${
                activeTab === tab
                  ? 'bg-teal-600 text-white'
                  : 'text-slate-400 hover:text-white'
              }`}
            >
              {tab}
            </button>
          ))}
        </div>

        {/* Content */}
        <AnimatePresence mode="wait">
          {activeTab === 'dashboard' && (
            <motion.div
              key="dashboard"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
              className="grid grid-cols-1 lg:grid-cols-3 gap-8"
            >
              {/* Asset Balances */}
              <div className="lg:col-span-2 space-y-6">
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                  <h2 className="text-xl font-bold text-white mb-6">üí∞ Asset Balances</h2>
                  
                  <div className="space-y-4">
                    {[
                      { symbol: 'ETH', name: 'Ethereum', balance: '125.5', value: '$285K', icon: '‚ü†' },
                      { symbol: 'USDC', name: 'USD Coin', balance: '180,000', value: '$180K', icon: 'üí∞' },
                      { symbol: 'WBTC', name: 'Wrapped Bitcoin', balance: '0.25', value: '$12K', icon: '‚Çø' },
                      { symbol: 'DAI', name: 'Dai Stablecoin', balance: '8,500', value: '$8.5K', icon: 'üü°' }
                    ].map((asset, index) => (
                      <motion.div
                        key={asset.symbol}
                        initial={{ opacity: 0, x: 20 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ delay: index * 0.1 }}
                        className="flex items-center justify-between p-4 bg-slate-700/30 rounded-lg hover:bg-slate-700/50 transition-colors"
                      >
                        <div className="flex items-center space-x-4">
                          <div className="w-12 h-12 bg-gradient-to-r from-teal-500 to-cyan-500 rounded-full flex items-center justify-center text-xl">
                            {asset.icon}
                          </div>
                          <div>
                            <h3 className="text-white font-medium">{asset.symbol}</h3>
                            <p className="text-slate-400 text-sm">{asset.name}</p>
                          </div>
                        </div>
                        <div className="text-right">
                          <div className="text-white font-bold">{asset.balance}</div>
                          <div className="text-slate-400 text-sm">{asset.value}</div>
                        </div>
                      </motion.div>
                    ))}
                  </div>

                  <button className="w-full mt-6 bg-gradient-to-r from-teal-500 to-cyan-500 text-white py-3 rounded-lg font-medium hover:from-teal-600 hover:to-cyan-600 transition-all">
                    üí∏ Create Transaction
                  </button>
                </div>

                {/* Recent Activity */}
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                  <h2 className="text-xl font-bold text-white mb-6">üìä Recent Activity</h2>
                  
                  <div className="space-y-3">
                    {[
                      { action: 'Transaction Approved', details: '50K USDC Marketing Budget', time: '1 hour ago', status: 'success' },
                      { action: 'New Transaction Created', details: '25 ETH Team Bonus', time: '4 hours ago', status: 'pending' },
                      { action: 'Signer Added', details: 'Eve (Legal) joined wallet', time: '2 days ago', status: 'info' },
                      { action: 'Transaction Executed', details: '15K USDC Legal Payment', time: '3 days ago', status: 'success' }
                    ].map((activity, index) => (
                      <motion.div
                        key={index}
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: index * 0.1 }}
                        className="flex items-center space-x-4 p-3 bg-slate-700/30 rounded-lg"
                      >
                        <div className={`w-3 h-3 rounded-full ${
                          activity.status === 'success' ? 'bg-green-400' :
                          activity.status === 'pending' ? 'bg-yellow-400' :
                          'bg-blue-400'
                        }`}></div>
                        <div className="flex-1">
                          <div className="text-white font-medium text-sm">{activity.action}</div>
                          <div className="text-slate-400 text-xs">{activity.details}</div>
                        </div>
                        <div className="text-slate-400 text-xs">{activity.time}</div>
                      </motion.div>
                    ))}
                  </div>
                </div>
              </div>

              {/* Sidebar */}
              <div className="space-y-6">
                {/* Signers */}
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                  <h2 className="text-xl font-bold text-white mb-4">üë• Signers</h2>
                  
                  <div className="space-y-3">
                    {signers.map((signer, index) => (
                      <motion.div
                        key={signer.address}
                        initial={{ opacity: 0, x: 20 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ delay: index * 0.1 }}
                        className="flex items-center space-x-3 p-3 bg-slate-700/30 rounded-lg"
                      >
                        <div className="text-2xl">{signer.avatar}</div>
                        <div className="flex-1">
                          <div className="text-white font-medium text-sm">{signer.name}</div>
                          <div className="text-slate-400 text-xs">{signer.address}</div>
                          <div className="text-slate-400 text-xs">Last seen: {signer.lastSeen}</div>
                        </div>
                        <div className={`w-2 h-2 rounded-full ${
                          signer.status === 'active' ? 'bg-green-400' : 'bg-gray-400'
                        }`}></div>
                      </motion.div>
                    ))}
                  </div>

                  <button className="w-full mt-4 bg-slate-700 text-white py-2 rounded-lg font-medium text-sm hover:bg-slate-600 transition-colors">
                    ‚ûï Manage Signers
                  </button>
                </div>

                {/* Security Status */}
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                  <h2 className="text-xl font-bold text-white mb-4">üîí Security Status</h2>
                  
                  <div className="space-y-4">
                    <div className="flex items-center justify-between">
                      <span className="text-slate-400 text-sm">Multi-sig Active</span>
                      <span className="text-green-400">‚úì</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-slate-400 text-sm">Hardware Security</span>
                      <span className="text-green-400">‚úì</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-slate-400 text-sm">Time Lock</span>
                      <span className="text-yellow-400">24h</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-slate-400 text-sm">Emergency Pause</span>
                      <span className="text-green-400">‚úì</span>
                    </div>
                  </div>

                  <div className="mt-4 p-3 bg-green-900/30 border border-green-600/30 rounded-lg">
                    <div className="text-green-400 font-medium text-sm text-center">
                      üõ°Ô∏è Wallet Security: Excellent
                    </div>
                  </div>
                </div>

                {/* Quick Actions */}
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                  <h2 className="text-xl font-bold text-white mb-4">‚ö° Quick Actions</h2>
                  
                  <div className="space-y-3">
                    <button className="w-full bg-gradient-to-r from-green-600 to-green-700 text-white py-2 rounded-lg font-medium text-sm">
                      üí∏ Send Payment
                    </button>
                    <button className="w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white py-2 rounded-lg font-medium text-sm">
                      üì• Receive Funds
                    </button>
                    <button className="w-full bg-gradient-to-r from-purple-600 to-purple-700 text-white py-2 rounded-lg font-medium text-sm">
                      üîÑ Token Swap
                    </button>
                    <button className="w-full bg-gradient-to-r from-orange-600 to-orange-700 text-white py-2 rounded-lg font-medium text-sm">
                      üìä View Reports
                    </button>
                  </div>
                </div>
              </div>
            </motion.div>
          )}

          {activeTab === 'transactions' && (
            <motion.div
              key="transactions"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
              className="max-w-6xl mx-auto"
            >
              <h2 className="text-2xl font-bold text-white mb-8 text-center">üìù Transaction Queue</h2>
              
              <div className="space-y-6">
                {transactions.map((tx, index) => (
                  <motion.div
                    key={tx.id}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                    className="bg-slate-800/50 border border-slate-700 rounded-xl p-6 hover:border-teal-500/30 transition-all duration-300"
                  >
                    <div className="flex items-start justify-between mb-4">
                      <div>
                        <div className="flex items-center space-x-3 mb-2">
                          <h3 className="text-xl font-bold text-white">{tx.description}</h3>
                          <span className={`px-2 py-1 rounded text-xs font-medium ${
                            tx.status === 'pending' ? 'bg-yellow-600 text-white' :
                            tx.status === 'approved' ? 'bg-green-600 text-white' :
                            tx.status === 'executed' ? 'bg-blue-600 text-white' :
                            'bg-red-600 text-white'
                          }`}>
                            {tx.status.toUpperCase()}
                          </span>
                        </div>
                        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
                          <div>
                            <span className="text-slate-400">Amount:</span>
                            <div className="text-white font-medium">{tx.amount} {tx.token}</div>
                          </div>
                          <div>
                            <span className="text-slate-400">To:</span>
                            <div className="text-white font-medium">{tx.to}</div>
                          </div>
                          <div>
                            <span className="text-slate-400">Initiated By:</span>
                            <div className="text-white font-medium">{tx.initiatedBy}</div>
                          </div>
                          <div>
                            <span className="text-slate-400">Time:</span>
                            <div className="text-white font-medium">{tx.timestamp}</div>
                          </div>
                        </div>
                      </div>
                    </div>

                    {/* Approval Progress */}
                    <div className="mb-4">
                      <div className="flex justify-between items-center mb-2">
                        <span className="text-slate-400 text-sm">Approvals</span>
                        <span className="text-teal-400 font-medium">{tx.confirmations}/{tx.required}</span>
                      </div>
                      <div className="w-full bg-slate-700 rounded-full h-2">
                        <div 
                          className="bg-gradient-to-r from-teal-500 to-cyan-500 h-2 rounded-full transition-all duration-300"
                          style={{ width: `${(tx.confirmations / tx.required) * 100}%` }}
                        />
                      </div>
                    </div>

                    {/* Approvers */}
                    <div className="flex items-center justify-between">
                      <div className="flex items-center space-x-2">
                        <span className="text-slate-400 text-sm">Approved by:</span>
                        <div className="flex space-x-1">
                          {tx.approvers.map((approver, i) => (
                            <span key={i} className="text-xs bg-green-600 text-white px-2 py-1 rounded">
                              {approver}
                            </span>
                          ))}
                        </div>
                      </div>
                      
                      {tx.status === 'pending' && (
                        <div className="flex space-x-3">
                          <button className="bg-gradient-to-r from-green-600 to-green-700 text-white px-4 py-2 rounded-lg font-medium text-sm">
                            ‚úÖ Approve
                          </button>
                          <button className="bg-gradient-to-r from-red-600 to-red-700 text-white px-4 py-2 rounded-lg font-medium text-sm">
                            ‚ùå Reject
                          </button>
                        </div>
                      )}
                      
                      {tx.status === 'approved' && (
                        <button className="bg-gradient-to-r from-teal-600 to-cyan-600 text-white px-4 py-2 rounded-lg font-medium text-sm">
                          üöÄ Execute
                        </button>
                      )}
                    </div>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </div>

      {/* Footer */}
      <footer className="border-t border-slate-800 bg-slate-900/30 backdrop-blur-xl mt-12">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between text-sm text-slate-400">
            <div>Built for ETH Dublin 2025 üáÆüá™</div>
            <div className="flex items-center space-x-4">
              <span>Multi-Sig Wallet</span>
              <span className="text-teal-400">‚óè</span>
              <span>Powered by VibeForge</span>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
} 
