'use client';

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface AIModel {
  id: string;
  name: string;
  category: string;
  description: string;
  price: string;
  downloads: number;
  rating: number;
  creator: string;
  tags: string[];
  accuracy: string;
  size: string;
  featured: boolean;
}

interface MarketStats {
  totalModels: number;
  totalRevenue: string;
  activeDeployments: number;
  topPerformers: number;
}

export default function AIMarketplaceUI() {
  const [activeTab, setActiveTab] = useState('marketplace');
  const [loading, setLoading] = useState(true);
  const [selectedCategory, setSelectedCategory] = useState('all');

  const stats: MarketStats = {
    totalModels: 2847,
    totalRevenue: '892 ETH',
    activeDeployments: 15420,
    topPerformers: 342
  };

  const aiModels: AIModel[] = [
    {
      id: '1',
      name: 'GPT-4 Vision Clone',
      category: 'Computer Vision',
      description: 'Advanced multimodal AI model for image understanding and text generation. Trained on diverse datasets with 95% accuracy on standard benchmarks.',
      price: '0.5 ETH',
      downloads: 1247,
      rating: 4.8,
      creator: 'AI_Researcher_Pro',
      tags: ['vision', 'nlp', 'multimodal', 'gpt'],
      accuracy: '95.2%',
      size: '7.2GB',
      featured: true
    },
    {
      id: '2',
      name: 'DeFi Price Predictor',
      category: 'Financial AI',
      description: 'Machine learning model specifically trained for cryptocurrency price prediction with real-time market data integration.',
      price: '0.3 ETH',
      downloads: 892,
      rating: 4.6,
      creator: 'CryptoQuant_AI',
      tags: ['finance', 'prediction', 'defi', 'lstm'],
      accuracy: '87.4%',
      size: '2.1GB',
      featured: true
    },
    {
      id: '3',
      name: 'NFT Art Generator',
      category: 'Generative AI',
      description: 'Create unique digital art pieces using advanced diffusion models. Perfect for NFT collections and digital artists.',
      price: '0.2 ETH',
      downloads: 2156,
      rating: 4.9,
      creator: 'ArtBot_Studio',
      tags: ['art', 'generative', 'diffusion', 'nft'],
      accuracy: '92.8%',
      size: '4.5GB',
      featured: false
    },
    {
      id: '4',
      name: 'Smart Contract Auditor',
      category: 'Security',
      description: 'AI-powered smart contract vulnerability detection and security analysis tool with comprehensive reporting.',
      price: '0.8 ETH',
      downloads: 567,
      rating: 4.7,
      creator: 'SecureChain_Labs',
      tags: ['security', 'audit', 'solidity', 'analysis'],
      accuracy: '94.1%',
      size: '3.8GB',
      featured: true
    },
    {
      id: '5',
      name: 'Sentiment Analyzer Pro',
      category: 'NLP',
      description: 'Advanced natural language processing model for social media sentiment analysis and market mood tracking.',
      price: '0.15 ETH',
      downloads: 1834,
      rating: 4.5,
      creator: 'NLP_Innovations',
      tags: ['nlp', 'sentiment', 'social', 'analysis'],
      accuracy: '89.6%',
      size: '1.9GB',
      featured: false
    }
  ];

  const categories = ['all', 'computer vision', 'financial ai', 'generative ai', 'security', 'nlp', 'robotics'];

  useEffect(() => {
    setTimeout(() => setLoading(false), 1500);
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-indigo-500 mx-auto mb-4"></div>
          <p className="text-white text-lg">Loading AI marketplace...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-indigo-950 to-slate-950">
      {/* Header */}
      <header className="border-b border-slate-700 bg-slate-900/50 backdrop-blur-sm">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <h1 className="text-2xl font-bold text-white">ü§ñ AI Model Marketplace</h1>
              <span className="text-sm text-slate-400">Generated by VibeForge</span>
            </div>
            <div className="flex items-center space-x-4">
              <a href="/" className="text-slate-400 hover:text-white transition-colors text-sm">
                ‚Üê Back to Generator
              </a>
              <button className="bg-gradient-to-r from-indigo-500 to-purple-500 hover:from-indigo-600 hover:to-purple-600 text-white px-6 py-2 rounded-lg font-medium transition-all transform hover:scale-105">
                Connect Wallet
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Market Stats */}
      <div className="bg-slate-800/30 border-b border-slate-700">
        <div className="container mx-auto px-6 py-6">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Total Models</h3>
                <div className="text-3xl font-bold text-indigo-400">{stats.totalModels.toLocaleString()}</div>
                <div className="text-xs text-slate-400 mt-1">Available models</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.1 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Total Revenue</h3>
                <div className="text-3xl font-bold text-green-400">{stats.totalRevenue}</div>
                <div className="text-xs text-slate-400 mt-1">Creator earnings</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.2 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Active Deployments</h3>
                <div className="text-3xl font-bold text-blue-400">{stats.activeDeployments.toLocaleString()}</div>
                <div className="text-xs text-slate-400 mt-1">Running instances</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.3 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Top Performers</h3>
                <div className="text-3xl font-bold text-yellow-400">{stats.topPerformers}</div>
                <div className="text-xs text-slate-400 mt-1">High-rated models</div>
              </div>
            </motion.div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-6 py-8">
        {/* Tabs */}
        <div className="flex space-x-1 bg-slate-800/50 rounded-xl p-1 mb-8 max-w-2xl mx-auto">
          {['marketplace', 'my-models', 'deploy', 'compute'].map((tab) => (
            <button
              key={tab}
              onClick={() => setActiveTab(tab)}
              className={`flex-1 py-3 px-4 rounded-lg text-sm font-medium transition-all capitalize ${
                activeTab === tab
                  ? 'bg-indigo-600 text-white'
                  : 'text-slate-400 hover:text-white'
              }`}
            >
              {tab.replace('-', ' ')}
            </button>
          ))}
        </div>

        {/* Content */}
        <AnimatePresence mode="wait">
          {activeTab === 'marketplace' && (
            <motion.div
              key="marketplace"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
            >
              {/* Category Filter */}
              <div className="flex flex-wrap gap-3 mb-8 justify-center">
                {categories.map((category) => (
                  <button
                    key={category}
                    onClick={() => setSelectedCategory(category)}
                    className={`px-4 py-2 rounded-lg text-sm font-medium transition-all capitalize ${
                      selectedCategory === category
                        ? 'bg-indigo-600 text-white'
                        : 'bg-slate-700 text-slate-300 hover:bg-slate-600'
                    }`}
                  >
                    {category}
                  </button>
                ))}
              </div>

              {/* Featured Models */}
              <div className="mb-8">
                <h2 className="text-2xl font-bold text-white mb-6">üåü Featured Models</h2>
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                  {aiModels
                    .filter(model => model.featured)
                    .map((model, index) => (
                      <motion.div
                        key={model.id}
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: index * 0.1 }}
                        className="bg-slate-800/50 border border-slate-700 rounded-xl p-6 hover:border-indigo-500/30 transition-all duration-300"
                      >
                        <div className="flex items-start justify-between mb-4">
                          <div>
                            <div className="flex items-center space-x-2 mb-2">
                              <h3 className="text-xl font-bold text-white">{model.name}</h3>
                              <span className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white px-2 py-1 rounded text-xs font-medium">
                                FEATURED
                              </span>
                            </div>
                            <p className="text-slate-300 text-sm leading-relaxed mb-3">{model.description}</p>
                            <div className="flex items-center space-x-4 text-sm text-slate-400">
                              <span>üìÇ {model.size}</span>
                              <span>üéØ {model.accuracy}</span>
                              <span>‚≠ê {model.rating}/5</span>
                            </div>
                          </div>
                        </div>

                        <div className="flex flex-wrap gap-2 mb-4">
                          {model.tags.map((tag) => (
                            <span key={tag} className="bg-slate-700 text-slate-300 px-2 py-1 rounded text-xs">
                              {tag}
                            </span>
                          ))}
                        </div>

                        <div className="flex items-center justify-between">
                          <div>
                            <div className="text-indigo-400 font-bold text-lg">{model.price}</div>
                            <div className="text-slate-400 text-sm">{model.downloads.toLocaleString()} downloads</div>
                          </div>
                          <div className="flex space-x-3">
                            <button className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white px-4 py-2 rounded-lg font-medium text-sm hover:from-indigo-700 hover:to-purple-700 transition-all">
                              üí≥ Purchase
                            </button>
                            <button className="bg-slate-700 text-white px-4 py-2 rounded-lg font-medium text-sm hover:bg-slate-600 transition-colors">
                              üëÅÔ∏è Preview
                            </button>
                          </div>
                        </div>
                      </motion.div>
                    ))}
                </div>
              </div>

              {/* All Models */}
              <div>
                <h2 className="text-2xl font-bold text-white mb-6">ü§ñ All Models</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {aiModels
                    .filter(model => selectedCategory === 'all' || model.category.toLowerCase() === selectedCategory)
                    .map((model, index) => (
                      <motion.div
                        key={model.id}
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: index * 0.1 }}
                        className="bg-slate-800/50 border border-slate-700 rounded-xl p-6 hover:border-indigo-500/30 transition-all duration-300"
                      >
                        <div className="mb-4">
                          <div className="flex items-center justify-between mb-2">
                            <span className={`px-2 py-1 rounded text-xs font-medium ${
                              model.category === 'Computer Vision' ? 'bg-blue-600 text-white' :
                              model.category === 'Financial AI' ? 'bg-green-600 text-white' :
                              model.category === 'Generative AI' ? 'bg-purple-600 text-white' :
                              model.category === 'Security' ? 'bg-red-600 text-white' :
                              'bg-orange-600 text-white'
                            }`}>
                              {model.category}
                            </span>
                            <div className="flex items-center space-x-1 text-yellow-400 text-sm">
                              <span>‚≠ê</span>
                              <span>{model.rating}</span>
                            </div>
                          </div>
                          <h3 className="text-lg font-bold text-white mb-2">{model.name}</h3>
                          <p className="text-slate-300 text-sm leading-relaxed mb-3">{model.description}</p>
                        </div>

                        <div className="grid grid-cols-2 gap-4 mb-4 text-sm">
                          <div>
                            <span className="text-slate-400">Size</span>
                            <div className="text-white font-medium">{model.size}</div>
                          </div>
                          <div>
                            <span className="text-slate-400">Accuracy</span>
                            <div className="text-white font-medium">{model.accuracy}</div>
                          </div>
                          <div>
                            <span className="text-slate-400">Creator</span>
                            <div className="text-white font-medium text-xs">{model.creator}</div>
                          </div>
                          <div>
                            <span className="text-slate-400">Downloads</span>
                            <div className="text-white font-medium">{model.downloads.toLocaleString()}</div>
                          </div>
                        </div>

                        <div className="flex items-center justify-between">
                          <div className="text-indigo-400 font-bold">{model.price}</div>
                          <div className="flex space-x-2">
                            <button className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white px-3 py-1 rounded text-sm font-medium hover:from-indigo-700 hover:to-purple-700 transition-all">
                              Buy
                            </button>
                            <button className="bg-slate-700 text-white px-3 py-1 rounded text-sm font-medium hover:bg-slate-600 transition-colors">
                              Try
                            </button>
                          </div>
                        </div>
                      </motion.div>
                    ))}
                </div>
              </div>
            </motion.div>
          )}

          {activeTab === 'my-models' && (
            <motion.div
              key="my-models"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
              className="max-w-4xl mx-auto"
            >
              <h2 className="text-2xl font-bold text-white mb-8 text-center">üìä Your Model Portfolio</h2>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6 text-center">
                  <div className="text-3xl font-bold text-indigo-400">7</div>
                  <div className="text-slate-400 text-sm">Published Models</div>
                </div>
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6 text-center">
                  <div className="text-3xl font-bold text-green-400">45.2 ETH</div>
                  <div className="text-slate-400 text-sm">Total Earnings</div>
                </div>
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6 text-center">
                  <div className="text-3xl font-bold text-blue-400">12.8K</div>
                  <div className="text-slate-400 text-sm">Total Downloads</div>
                </div>
              </div>

              <div className="space-y-4">
                {[
                  { name: 'Custom Vision Model v2', category: 'Computer Vision', earnings: '12.5 ETH', downloads: 3420, status: 'Active' },
                  { name: 'Sentiment AI Pro', category: 'NLP', earnings: '8.9 ETH', downloads: 2156, status: 'Active' },
                  { name: 'Price Predictor v3', category: 'Financial AI', earnings: '15.2 ETH', downloads: 4890, status: 'Featured' },
                  { name: 'Smart Contract Scanner', category: 'Security', earnings: '8.6 ETH', downloads: 1783, status: 'Active' }
                ].map((model, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                    className="bg-slate-800/50 border border-slate-700 rounded-xl p-6"
                  >
                    <div className="flex items-center justify-between">
                      <div>
                        <div className="flex items-center space-x-3 mb-2">
                          <h3 className="text-lg font-bold text-white">{model.name}</h3>
                          <span className={`px-2 py-1 rounded text-xs font-medium ${
                            model.status === 'Featured' ? 'bg-yellow-600 text-white' : 'bg-green-600 text-white'
                          }`}>
                            {model.status}
                          </span>
                        </div>
                        <div className="flex items-center space-x-6 text-sm text-slate-400">
                          <span>üìÇ {model.category}</span>
                          <span>üí∞ {model.earnings}</span>
                          <span>üì• {model.downloads.toLocaleString()} downloads</span>
                        </div>
                      </div>
                      <div className="flex space-x-3">
                        <button className="bg-indigo-600 text-white px-4 py-2 rounded-lg font-medium text-sm hover:bg-indigo-700 transition-colors">
                          üìà Analytics
                        </button>
                        <button className="bg-slate-700 text-white px-4 py-2 rounded-lg font-medium text-sm hover:bg-slate-600 transition-colors">
                          ‚öôÔ∏è Settings
                        </button>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>

              <div className="mt-8 text-center">
                <button className="bg-gradient-to-r from-indigo-500 to-purple-500 text-white px-8 py-3 rounded-lg font-medium hover:from-indigo-600 hover:to-purple-600 transition-all">
                  üöÄ Upload New Model
                </button>
              </div>
            </motion.div>
          )}

          {activeTab === 'compute' && (
            <motion.div
              key="compute"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
              className="max-w-6xl mx-auto"
            >
              <h2 className="text-2xl font-bold text-white mb-8 text-center">‚ö° Compute Resources</h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {[
                  { 
                    name: 'GPU Cluster A100', 
                    specs: '8x NVIDIA A100 80GB', 
                    price: '0.5 ETH/hour', 
                    availability: 'Available',
                    performance: 'Ultra High',
                    color: 'green'
                  },
                  { 
                    name: 'GPU Cluster V100', 
                    specs: '4x NVIDIA V100 32GB', 
                    price: '0.3 ETH/hour', 
                    availability: 'Available',
                    performance: 'High',
                    color: 'blue'
                  },
                  { 
                    name: 'GPU Cluster RTX', 
                    specs: '6x RTX 4090 24GB', 
                    price: '0.2 ETH/hour', 
                    availability: 'Busy',
                    performance: 'Medium',
                    color: 'yellow'
                  },
                  { 
                    name: 'CPU Cluster Intel', 
                    specs: '64 Core Xeon Platinum', 
                    price: '0.1 ETH/hour', 
                    availability: 'Available',
                    performance: 'Standard',
                    color: 'indigo'
                  },
                  { 
                    name: 'TPU Cluster v4', 
                    specs: '8x Google TPU v4', 
                    price: '0.4 ETH/hour', 
                    availability: 'Available',
                    performance: 'Ultra High',
                    color: 'purple'
                  },
                  { 
                    name: 'Mixed Cluster', 
                    specs: '2x A100 + 32 Core CPU', 
                    price: '0.25 ETH/hour', 
                    availability: 'Available',
                    performance: 'High',
                    color: 'teal'
                  }
                ].map((resource, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                    className="bg-slate-800/50 border border-slate-700 rounded-xl p-6 hover:border-indigo-500/30 transition-all duration-300"
                  >
                    <div className="mb-4">
                      <h3 className="text-lg font-bold text-white mb-2">{resource.name}</h3>
                      <p className="text-slate-300 text-sm mb-3">{resource.specs}</p>
                      <div className="flex items-center justify-between text-sm">
                        <span className="text-slate-400">Performance:</span>
                        <span className={`text-${resource.color}-400 font-medium`}>{resource.performance}</span>
                      </div>
                    </div>

                    <div className="flex items-center justify-between mb-4">
                      <div className="text-indigo-400 font-bold">{resource.price}</div>
                      <span className={`px-2 py-1 rounded text-xs font-medium ${
                        resource.availability === 'Available' ? 'bg-green-600 text-white' :
                        resource.availability === 'Busy' ? 'bg-yellow-600 text-white' :
                        'bg-red-600 text-white'
                      }`}>
                        {resource.availability}
                      </span>
                    </div>

                    <button 
                      className={`w-full py-2 rounded-lg font-medium text-sm transition-all ${
                        resource.availability === 'Available' 
                          ? 'bg-gradient-to-r from-indigo-600 to-purple-600 text-white hover:from-indigo-700 hover:to-purple-700' 
                          : 'bg-slate-600 text-slate-400 cursor-not-allowed'
                      }`}
                      disabled={resource.availability !== 'Available'}
                    >
                      {resource.availability === 'Available' ? 'üöÄ Deploy Model' : '‚è≥ Join Queue'}
                    </button>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </div>

      {/* Footer */}
      <footer className="border-t border-slate-800 bg-slate-900/30 backdrop-blur-xl mt-12">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between text-sm text-slate-400">
            <div>Built for ETH Dublin 2025 üáÆüá™</div>
            <div className="flex items-center space-x-4">
              <span>AI Model Marketplace</span>
              <span className="text-indigo-400">‚óè</span>
              <span>Powered by VibeForge</span>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
} 
