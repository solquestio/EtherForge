'use client';

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

export default function DAOGovernanceUI() {
  const [activeTab, setActiveTab] = useState('proposals');
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    setTimeout(() => setLoading(false), 1500);
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-purple-500 mx-auto mb-4"></div>
          <p className="text-white text-lg">Loading DAO governance...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-purple-950 to-slate-950">
      {/* Header */}
      <header className="border-b border-slate-700 bg-slate-900/50 backdrop-blur-sm">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <h1 className="text-2xl font-bold text-white">üó≥Ô∏è DAO Governance</h1>
              <span className="text-sm text-slate-400">Generated by VibeCode AI</span>
            </div>
            <div className="flex items-center space-x-4">
              <a href="/" className="text-slate-400 hover:text-white transition-colors text-sm">
                ‚Üê Back to Generator
              </a>
              <button className="bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white px-6 py-2 rounded-lg font-medium transition-all transform hover:scale-105">
                Connect Wallet
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* DAO Stats */}
      <div className="bg-slate-800/30 border-b border-slate-700">
        <div className="container mx-auto px-6 py-6">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Total Members</h3>
                <div className="text-3xl font-bold text-purple-400">2,456</div>
                <div className="text-xs text-slate-400 mt-1">Active voters</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.1 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Treasury</h3>
                <div className="text-3xl font-bold text-green-400">$1.2M</div>
                <div className="text-xs text-slate-400 mt-1">Total value</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.2 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Your Voting Power</h3>
                <div className="text-3xl font-bold text-blue-400">12.5K</div>
                <div className="text-xs text-slate-400 mt-1">DAO tokens</div>
              </div>
            </motion.div>

            <motion.div className="bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-xl p-6" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.3 }}>
              <div className="text-center">
                <h3 className="text-lg font-semibold text-white mb-2">Active Proposals</h3>
                <div className="text-3xl font-bold text-orange-400">8</div>
                <div className="text-xs text-slate-400 mt-1">Awaiting votes</div>
              </div>
            </motion.div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-6 py-8">
        {/* Tabs */}
        <div className="flex space-x-1 bg-slate-800/50 rounded-xl p-1 mb-8 max-w-lg">
          {['proposals', 'treasury', 'members', 'create'].map((tab) => (
            <button
              key={tab}
              onClick={() => setActiveTab(tab)}
              className={`flex-1 py-2 px-4 rounded-lg text-sm font-medium transition-all capitalize ${
                activeTab === tab
                  ? 'bg-purple-600 text-white'
                  : 'text-slate-400 hover:text-white'
              }`}
            >
              {tab}
            </button>
          ))}
        </div>

        {/* Content */}
        <AnimatePresence mode="wait">
          {activeTab === 'proposals' && (
            <motion.div
              key="proposals"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
              className="space-y-6"
            >
              <h2 className="text-2xl font-bold text-white mb-6">üó≥Ô∏è Active Proposals</h2>
              
              {[
                {
                  id: 'PROP-001',
                  title: 'Increase Marketing Budget by 50%',
                  description: 'Proposal to allocate additional $500K from treasury for Q1 2025 marketing initiatives to drive user adoption.',
                  status: 'Active',
                  votesFor: '145,234',
                  votesAgainst: '89,456',
                  quorum: '67%',
                  timeLeft: '3 days',
                  type: 'Treasury'
                },
                {
                  id: 'PROP-002',
                  title: 'Implement Staking Rewards Program',
                  description: 'Introduction of a new staking mechanism with 8% APY for long-term token holders.',
                  status: 'Active',
                  votesFor: '234,567',
                  votesAgainst: '45,123',
                  quorum: '89%',
                  timeLeft: '5 days',
                  type: 'Protocol'
                },
                {
                  id: 'PROP-003',
                  title: 'Partnership with Major DeFi Protocol',
                  description: 'Strategic partnership proposal to integrate with Compound for enhanced lending capabilities.',
                  status: 'Pending',
                  votesFor: '67,890',
                  votesAgainst: '23,456',
                  quorum: '34%',
                  timeLeft: '7 days',
                  type: 'Partnership'
                }
              ].map((proposal, index) => (
                <motion.div
                  key={proposal.id}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.1 }}
                  className="bg-slate-800/50 border border-slate-700 rounded-xl p-6 hover:border-purple-500 transition-all duration-300"
                >
                  <div className="flex items-start justify-between mb-4">
                    <div className="flex-1">
                      <div className="flex items-center space-x-3 mb-2">
                        <h3 className="text-xl font-bold text-white">{proposal.title}</h3>
                        <span className={`px-2 py-1 rounded text-xs font-medium ${
                          proposal.status === 'Active' ? 'bg-green-600 text-white' : 'bg-yellow-600 text-white'
                        }`}>
                          {proposal.status}
                        </span>
                        <span className="px-2 py-1 rounded text-xs font-medium bg-purple-600 text-white">
                          {proposal.type}
                        </span>
                      </div>
                      <p className="text-slate-300 text-sm mb-4">{proposal.description}</p>
                    </div>
                    <div className="text-right">
                      <div className="text-sm text-slate-400">Proposal ID</div>
                      <div className="text-purple-400 font-mono text-sm">{proposal.id}</div>
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                    <div className="text-center">
                      <div className="text-sm text-slate-400 mb-1">Votes For</div>
                      <div className="text-xl font-bold text-green-400">{proposal.votesFor}</div>
                    </div>
                    <div className="text-center">
                      <div className="text-sm text-slate-400 mb-1">Votes Against</div>
                      <div className="text-xl font-bold text-red-400">{proposal.votesAgainst}</div>
                    </div>
                    <div className="text-center">
                      <div className="text-sm text-slate-400 mb-1">Quorum</div>
                      <div className="text-xl font-bold text-blue-400">{proposal.quorum}</div>
                    </div>
                    <div className="text-center">
                      <div className="text-sm text-slate-400 mb-1">Time Left</div>
                      <div className="text-xl font-bold text-orange-400">{proposal.timeLeft}</div>
                    </div>
                  </div>

                  {/* Progress Bar */}
                  <div className="mb-4">
                    <div className="flex justify-between text-sm text-slate-400 mb-2">
                      <span>Voting Progress</span>
                      <span>{proposal.quorum} of 100% quorum</span>
                    </div>
                    <div className="w-full bg-slate-700 rounded-full h-2">
                      <div 
                        className="bg-gradient-to-r from-green-500 to-blue-500 h-2 rounded-full transition-all duration-300"
                        style={{ width: proposal.quorum }}
                      ></div>
                    </div>
                  </div>

                  <div className="flex space-x-4">
                    <button className="flex-1 bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded-lg font-medium transition-colors">
                      ‚úÖ Vote For
                    </button>
                    <button className="flex-1 bg-red-600 hover:bg-red-700 text-white py-2 px-4 rounded-lg font-medium transition-colors">
                      ‚ùå Vote Against
                    </button>
                    <button className="px-6 bg-slate-700 hover:bg-slate-600 text-white py-2 rounded-lg font-medium transition-colors">
                      üìã Details
                    </button>
                  </div>
                </motion.div>
              ))}
            </motion.div>
          )}
        </AnimatePresence>
      </div>

      {/* Footer */}
      <footer className="border-t border-slate-800 bg-slate-900/30 backdrop-blur-xl mt-12">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between text-sm text-slate-400">
            <div>Built for ETH Dublin 2025 üáÆüá™</div>
            <div className="flex items-center space-x-4">
              <span>DAO Governance Platform</span>
              <span className="text-purple-400">‚óè</span>
              <span>Powered by VibeCode AI</span>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
} 