'use client';

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface TokenInfo {
  name: string;
  symbol: string;
  totalSupply: string;
  currentPrice: string;
  marketCap: string;
  holders: string;
  progress: number;
}

export default function TokenLaunchUI() {
  const [activeTab, setActiveTab] = useState('launch');
  const [loading, setLoading] = useState(true);

  const tokenInfo: TokenInfo = {
    name: 'VibeCode Token',
    symbol: 'VIBE',
    totalSupply: '1,000,000,000',
    currentPrice: '$0.125',
    marketCap: '$12.5M',
    holders: '2,847',
    progress: 68
  };

  useEffect(() => {
    setTimeout(() => setLoading(false), 1500);
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-orange-500 mx-auto mb-4"></div>
          <p className="text-white text-lg">Loading token launch platform...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-orange-950 to-slate-950">
      {/* Header */}
      <header className="border-b border-slate-700 bg-slate-900/50 backdrop-blur-sm">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <h1 className="text-2xl font-bold text-white">üöÄ Token Launch</h1>
              <span className="text-sm text-slate-400">Generated by VibeCode AI</span>
            </div>
            <div className="flex items-center space-x-4">
              <a href="/" className="text-slate-400 hover:text-white transition-colors text-sm">
                ‚Üê Back to Generator
              </a>
              <button className="bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white px-6 py-2 rounded-lg font-medium transition-all transform hover:scale-105">
                Connect Wallet
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Token Overview */}
      <div className="bg-slate-800/30 border-b border-slate-700">
        <div className="container mx-auto px-6 py-8">
          <div className="text-center mb-8">
            <motion.div 
              className="w-24 h-24 bg-gradient-to-r from-orange-400 to-red-400 rounded-full mx-auto mb-4 flex items-center justify-center text-4xl"
              initial={{ scale: 0 }}
              animate={{ scale: 1 }}
              transition={{ type: "spring", stiffness: 200, damping: 10 }}
            >
              üöÄ
            </motion.div>
            <h2 className="text-3xl font-bold text-white mb-2">{tokenInfo.name}</h2>
            <p className="text-lg text-slate-300">${tokenInfo.symbol} - Governance & Utility Token</p>
            <div className="flex justify-center space-x-8 mt-6">
              <div className="text-center">
                <div className="text-2xl font-bold text-orange-400">{tokenInfo.currentPrice}</div>
                <div className="text-sm text-slate-400">Current Price</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-green-400">{tokenInfo.marketCap}</div>
                <div className="text-sm text-slate-400">Market Cap</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-blue-400">{tokenInfo.holders}</div>
                <div className="text-sm text-slate-400">Holders</div>
              </div>
            </div>
          </div>

          {/* Launch Progress */}
          <motion.div 
            className="bg-slate-800/50 border border-slate-700 rounded-xl p-6 max-w-2xl mx-auto"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.3 }}
          >
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-xl font-bold text-white">Launch Progress</h3>
              <span className="text-2xl font-bold text-orange-400">{tokenInfo.progress}%</span>
            </div>
            <div className="w-full bg-slate-700 rounded-full h-4 mb-4">
              <motion.div 
                className="bg-gradient-to-r from-orange-400 to-red-400 h-4 rounded-full"
                initial={{ width: 0 }}
                animate={{ width: `${tokenInfo.progress}%` }}
                transition={{ duration: 2, ease: "easeOut" }}
              />
            </div>
            <div className="grid grid-cols-3 gap-4 text-sm">
              <div className="text-center">
                <div className="text-green-400 font-medium">‚úÖ Smart Contract</div>
                <div className="text-slate-400">Deployed & Audited</div>
              </div>
              <div className="text-center">
                <div className="text-orange-400 font-medium">üîÑ Public Sale</div>
                <div className="text-slate-400">In Progress</div>
              </div>
              <div className="text-center">
                <div className="text-slate-400 font-medium">‚è≥ Exchange Listing</div>
                <div className="text-slate-400">Pending</div>
              </div>
            </div>
          </motion.div>
        </div>
      </div>

      <div className="container mx-auto px-6 py-8">
        {/* Tabs */}
        <div className="flex space-x-1 bg-slate-800/50 rounded-xl p-1 mb-8 max-w-2xl mx-auto">
          {['launch', 'vesting', 'staking', 'airdrop'].map((tab) => (
            <button
              key={tab}
              onClick={() => setActiveTab(tab)}
              className={`flex-1 py-3 px-4 rounded-lg text-sm font-medium transition-all capitalize ${
                activeTab === tab
                  ? 'bg-orange-600 text-white'
                  : 'text-slate-400 hover:text-white'
              }`}
            >
              {tab}
            </button>
          ))}
        </div>

        {/* Content */}
        <AnimatePresence mode="wait">
          {activeTab === 'launch' && (
            <motion.div
              key="launch"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
              className="grid grid-cols-1 lg:grid-cols-2 gap-8"
            >
              {/* Purchase Widget */}
              <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                <h2 className="text-2xl font-bold text-white mb-6">üöÄ Buy Tokens</h2>
                
                <div className="space-y-6">
                  <div>
                    <label className="block text-sm text-slate-400 mb-2">You Pay</label>
                    <div className="relative">
                      <input
                        type="text"
                        placeholder="0.0"
                        className="w-full bg-slate-700 border border-slate-600 rounded-lg px-4 py-4 text-white text-xl focus:ring-2 focus:ring-orange-500"
                      />
                      <div className="absolute right-4 top-1/2 transform -translate-y-1/2 flex items-center space-x-2">
                        <span className="text-slate-400 text-sm">ETH</span>
                        <button className="text-orange-400 text-sm hover:text-orange-300">MAX</button>
                      </div>
                    </div>
                    <div className="flex justify-between mt-2 text-sm text-slate-400">
                      <span>‚âà $0.00</span>
                      <span>Balance: 2.5 ETH</span>
                    </div>
                  </div>

                  <div className="text-center py-2">
                    <div className="text-slate-400">‚Üì</div>
                  </div>

                  <div>
                    <label className="block text-sm text-slate-400 mb-2">You Receive</label>
                    <div className="bg-slate-700 border border-slate-600 rounded-lg px-4 py-4 text-white text-xl">
                      0.0 VIBE
                    </div>
                    <div className="text-sm text-slate-400 mt-2">Current Rate: 1 ETH = 8,000 VIBE</div>
                  </div>

                  <div className="bg-slate-700/50 rounded-lg p-4 space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-slate-400">Min Purchase</span>
                      <span className="text-white">0.01 ETH</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-400">Max Purchase</span>
                      <span className="text-white">10 ETH</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-400">Vesting Period</span>
                      <span className="text-white">6 months linear</span>
                    </div>
                  </div>

                  <button className="w-full bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white py-4 rounded-lg font-medium transition-all transform hover:scale-105">
                    üöÄ Buy VIBE Tokens
                  </button>
                </div>
              </div>

              {/* Token Details */}
              <div className="space-y-6">
                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                  <h3 className="text-xl font-bold text-white mb-4">üìä Token Distribution</h3>
                  
                  <div className="space-y-4">
                    {[
                      { label: 'Public Sale', percentage: 40, color: 'from-orange-500 to-red-500' },
                      { label: 'Team & Advisors', percentage: 20, color: 'from-blue-500 to-purple-500' },
                      { label: 'Treasury', percentage: 25, color: 'from-green-500 to-emerald-500' },
                      { label: 'Liquidity', percentage: 15, color: 'from-purple-500 to-pink-500' }
                    ].map((item, index) => (
                      <div key={item.label}>
                        <div className="flex justify-between text-sm mb-1">
                          <span className="text-slate-300">{item.label}</span>
                          <span className="text-white font-medium">{item.percentage}%</span>
                        </div>
                        <div className="w-full bg-slate-700 rounded-full h-2">
                          <motion.div 
                            className={`bg-gradient-to-r ${item.color} h-2 rounded-full`}
                            initial={{ width: 0 }}
                            animate={{ width: `${item.percentage}%` }}
                            transition={{ duration: 1.5, delay: index * 0.2 }}
                          />
                        </div>
                      </div>
                    ))}
                  </div>
                </div>

                <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-6">
                  <h3 className="text-xl font-bold text-white mb-4">üî• Key Features</h3>
                  
                  <div className="space-y-3">
                    {[
                      { icon: 'üó≥Ô∏è', title: 'Governance Rights', desc: 'Vote on protocol decisions' },
                      { icon: 'üí∞', title: 'Staking Rewards', desc: 'Earn 8% APY staking rewards' },
                      { icon: 'üî•', title: 'Deflationary', desc: '2% burn on transactions' },
                      { icon: 'üéÅ', title: 'Utility Access', desc: 'Premium platform features' }
                    ].map((feature, index) => (
                      <motion.div
                        key={feature.title}
                        initial={{ opacity: 0, x: 20 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ delay: index * 0.1 }}
                        className="flex items-center space-x-3"
                      >
                        <span className="text-2xl">{feature.icon}</span>
                        <div>
                          <h4 className="text-white font-medium">{feature.title}</h4>
                          <p className="text-slate-400 text-sm">{feature.desc}</p>
                        </div>
                      </motion.div>
                    ))}
                  </div>
                </div>
              </div>
            </motion.div>
          )}

          {activeTab === 'vesting' && (
            <motion.div
              key="vesting"
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
              className="max-w-4xl mx-auto"
            >
              <h2 className="text-2xl font-bold text-white mb-8 text-center">üìà Vesting Schedules</h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {[
                  {
                    category: 'Public Sale',
                    total: '400,000,000 VIBE',
                    cliff: 'No cliff',
                    duration: '6 months linear',
                    released: '45%',
                    color: 'orange'
                  },
                  {
                    category: 'Team & Advisors',
                    total: '200,000,000 VIBE',
                    cliff: '12 months',
                    duration: '24 months linear',
                    released: '0%',
                    color: 'blue'
                  },
                  {
                    category: 'Treasury',
                    total: '250,000,000 VIBE',
                    cliff: '6 months',
                    duration: '36 months linear',
                    released: '12%',
                    color: 'green'
                  },
                  {
                    category: 'Liquidity',
                    total: '150,000,000 VIBE',
                    cliff: 'No cliff',
                    duration: 'Immediate',
                    released: '100%',
                    color: 'purple'
                  }
                ].map((schedule, index) => (
                  <motion.div
                    key={schedule.category}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                    className="bg-slate-800/50 border border-slate-700 rounded-xl p-6"
                  >
                    <h3 className="text-lg font-bold text-white mb-4">{schedule.category}</h3>
                    
                    <div className="space-y-3 text-sm">
                      <div className="flex justify-between">
                        <span className="text-slate-400">Total Allocation</span>
                        <span className="text-white font-medium">{schedule.total}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-slate-400">Cliff Period</span>
                        <span className="text-white font-medium">{schedule.cliff}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-slate-400">Vesting Duration</span>
                        <span className="text-white font-medium">{schedule.duration}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-slate-400">Released</span>
                        <span className={`text-${schedule.color}-400 font-medium`}>{schedule.released}</span>
                      </div>
                    </div>

                    <div className="mt-4">
                      <div className="w-full bg-slate-700 rounded-full h-2">
                        <div 
                          className={`bg-gradient-to-r from-${schedule.color}-500 to-${schedule.color}-400 h-2 rounded-full transition-all duration-1000`}
                          style={{ width: schedule.released }}
                        />
                      </div>
                    </div>

                    <button className={`w-full mt-4 bg-${schedule.color}-600 hover:bg-${schedule.color}-700 text-white py-2 rounded-lg font-medium transition-colors`}>
                      View Details
                    </button>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </div>

      {/* Footer */}
      <footer className="border-t border-slate-800 bg-slate-900/30 backdrop-blur-xl mt-12">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between text-sm text-slate-400">
            <div>Built for ETH Dublin 2025 üáÆüá™</div>
            <div className="flex items-center space-x-4">
              <span>Token Launch Platform</span>
              <span className="text-orange-400">‚óè</span>
              <span>Powered by VibeCode AI</span>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
} 